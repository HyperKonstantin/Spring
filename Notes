подключения

    за подключение отвечает папка scripts.
    docker запускается командой [docker compose up --build] из папки scripts
    команда для полного перезапуска в случае ошибок: [docker compose up -d --force-recreate]
    для получения ip адреса prometeus при добавлении его в grafana команда [docker inspect <container id>]
    id контейнера получить командой [docker container ls]

    для подключения postgresql нужен postgres_exporter. Команды для загрузки:
    [wget https://github.com/prometheus-community/postgres_exporter/releases/download/v0.9.0/postgres_exporter-0.9.0.linux-amd64.tar.gz]
    [tar xvfz postgres_exporter-*.linux-amd64.tar.gz]
    [cd postgres_exporter-*.linux-amd64]
    [export DATA_SOURCE_NAME='postgresql://ccs:ccs@192.168.246.64:6432/test?sslmode=disable']
    [./postgres_exporter] - запуск postgres_exporter.

    для запуска локального сервера Nats: [nats-server]

    для запуска проекта через докер нужно создать образ в директории с Dockerfile [docker build -t <image name> .]
    и запустить контейнер [docker run -p <output port>:<application port> <image name>]

    запуск jmeter из консоли (из папки с .sh файлом)
     [./jmeter.sh -n -t <path + test filename> -l <path + log filename> -e -o <path + result filename>]

Порты:

    8080 - SpringProjectApplication
    8081 - NatsListener
    9090 - Prometheus
    3000 - Grafana
    4222 - Nats (local)
    9092 - Kafka
    192.168.246.64:4222 - Nats (Server)
    http://192.168.246.64:9187 - postgres-exporter

Kafka: (https://habr.com/ru/companies/slurm/articles/719540/)
    запуск:
    запуск zookeeper - [./bin/zookeeper-server-start.sh config/zookeeper.properties]
    запуск kafka - [./bin/kafka-server-start.sh config/server.properties]
    создать топик - [./bin/kafka-topics.sh --create --topic <topic name> --bootstrap-server localhost:9092]
    информация о топике - [./bin/kafka-topics.sh --describe --topic <topic name> --bootstrap-server localhost:9092]

    консоль Kafka-Producer - [./bin/kafka-console-producer.sh --topic <topic name> --bootstrap-server localhost:9092]

    консоль Kafka-Consumer - [./bin/kafka-console-consumer.sh --topic <topic name> --bootstrap-server localhost:9092]
    Доп. свойства (дописываются в конце команды):
        - чтение записей, отправленных до входа consumer: --consumer-property auto.offset.reset=earliest (shortcut: --from-beginning)
        - задать группу: --group <group name>







